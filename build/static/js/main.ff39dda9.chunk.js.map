{"version":3,"sources":["components/hotel.js","App.js","index.js"],"names":["Hotel","props","className","votes","name","locality","address","cuisines","cost","App","useState","restaurant","setRest","id","setId","search","get","getQuery","useEffect","getRestaurants","a","fetch","method","headers","Accept","response","json","data","restaurants","onSubmit","e","preventDefault","onChange","target","value","hidden","map","rest","location","average_cost_for_two","rating","user_rating","aggregate_rating","rating_color","rating_obj","bg_color","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLA0BeA,G,MAxBD,SAACC,GACb,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,eACb,4BACA,6BAAMD,EAAME,MAAZ,UAEF,yBAAKD,UAAU,gBACb,wBAAIA,UAAU,aAAaD,EAAMG,MACjC,yBAAKF,UAAU,YAAYD,EAAMI,UACjC,yBAAKH,UAAU,YAAYD,EAAMK,SACjC,6BACA,yBAAKJ,UAAU,gBACb,iCADF,IACqBD,EAAMM,UAE3B,yBAAKL,UAAU,aACb,yCACCD,EAAMO,UC4DFC,MA3Ef,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACMC,EADN,OAEOF,qBAFP,mBAENG,EAFM,KAEFC,EAFE,OAGeJ,mBAAS,IAHxB,mBAGNK,EAHM,aAIWL,mBAAS,CAAC,EAAG,MAJxB,mBAINM,EAJM,KAIDC,EAJC,KAMbC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAc,uCAAG,8BAAAC,EAAA,yDACJ,IAAXJ,EAAI,IAAuB,KAAXA,EAAI,GADL,gCAEIK,MAAM,2DAAD,OACiCL,EAAI,GADrC,+BAC8DA,EAAI,GADlE,aAE1B,CACEM,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,WAAY,sCARC,cAEbC,EAFa,gBAYAA,EAASC,OAZT,OAYbC,EAZa,OAanBf,EAAQe,EAAKC,aAbM,2CAAH,qDA0BpB,OACE,yBAAK1B,UAAU,OACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,YAAY2B,SARhB,SAACC,GACjBA,EAAEC,iBACFd,EAAS,CAACJ,EAAIE,MAOR,6BACE,4BACEF,GAAG,YACHX,UAAU,oBACV8B,SAjBK,SAACF,GAChBhB,EAAMgB,EAAEG,OAAOC,SAkBL,4BAAQA,MAAM,IAAIC,QAAM,GAAxB,eAGA,4BAAQD,MAAM,KAAd,aACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,UAEF,4BAAQrB,GAAG,aAAaX,UAAU,cAAlC,aAOLS,EAAWyB,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CACEjC,KAAMiC,EAAK1B,WAAWP,KACtBC,SAAUgC,EAAK1B,WAAW2B,SAASjC,SACnCC,QAAS+B,EAAK1B,WAAW2B,SAAShC,QAClCE,KAAM6B,EAAK1B,WAAW4B,qBACtBC,OAAQH,EAAK1B,WAAW8B,YAAYC,iBACpCvC,MAAOkC,EAAK1B,WAAW8B,YAAYtC,MACnCwC,aAAcN,EAAK1B,WAAW8B,YAAYG,WAAWC,SAASC,YCpExEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ff39dda9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Hotel = (props) => {\n  return (\n    <div className=\"hotel-tile\">\n      <div className=\"rest-rating\">\n        <p></p>\n        <div>{props.votes}votes</div>\n      </div>\n      <div className=\"rest-details\">\n        <h2 className=\"rest-name\">{props.name}</h2>\n        <div className=\"rest-loc\">{props.locality}</div>\n        <div className=\"rest-add\">{props.address}</div>\n        <hr />\n        <div className=\"rest-cusines\">\n          <strong></strong> {props.cuisines}\n        </div>\n        <div className=\"rest-cost\">\n          <strong>Price</strong>\n          {props.cost}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hotel;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Hotel from \"./components/hotel\";\n\nfunction App() {\n  const [restaurant, setRest] = useState([]);\n  const [id, setId] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [get, getQuery] = useState([0, \"\"]);\n\n  useEffect(() => {\n    getRestaurants();\n  }, [get]);\n\n  const getRestaurants = async () => {\n    if (!(get[0] === 0 && get[1] === \"\")) {\n      const response = await fetch(\n        `https://developers.zomato.com/api/v2.1/search?entity_id=${get[0]}&entity_type=city&q=${get[1]}&count=10`,\n        {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"user-key\": \"01674c59601696499799390356e2e66c\",\n          },\n        }\n      );\n      const data = await response.json();\n      setRest(data.restaurants);\n    }\n  };\n\n  const updateID = (e) => {\n    setId(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    getQuery([id, search]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"appp\">\n        <form className=\"searchBar\" onSubmit={getSearch}>\n          <div>\n            <select\n              id=\"select_id\"\n              className=\"city form-control\"\n              onChange={updateID}\n            >\n              <option value=\"0\" hidden>\n                Select City\n              </option>\n              <option value=\"3\">Bengaluru</option>\n              <option value=\"2\">Mumbai</option>\n              <option value=\"1\">Delhi</option>\n            </select>\n            <button id=\"getMessage\" className=\"search-btn\">\n              Search\n            </button>\n          </div>\n        </form>\n      </div>\n\n      {restaurant.map((rest) => (\n        <Hotel\n          name={rest.restaurant.name}\n          locality={rest.restaurant.location.locality}\n          address={rest.restaurant.location.address}\n          cost={rest.restaurant.average_cost_for_two}\n          rating={rest.restaurant.user_rating.aggregate_rating}\n          votes={rest.restaurant.user_rating.votes}\n          rating_color={rest.restaurant.user_rating.rating_obj.bg_color.type}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}